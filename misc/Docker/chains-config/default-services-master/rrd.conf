[main]
class: Rrd
autostart: true
manager: chainsmaster

#[plots]
#
# Each "plot" is an rrd file, and represents a single value from state
# to poll and write on a regular basis.
#
#
# The key in state to fetch and plot
#
# Format is <device>.<key>.<value> where <value> is usually "value"
# but can in principle be any field in event, and can also contain more
# dots to "dig" further in to an event that has nested dictionaries.
#
#myplot1.source = timer.minute.value
#myplot2.source = philipshue.mylamp.color.number
#
# 
# An optional label to use when showing legend for the datasource in
# a graph. Defaults to ID if none is set (ID=myplot1 in this example).
#
#myplot1.label = My awesome datasource
#
#
# The polling interval to use when fetching value from state and plotting it.
# Default is 60 sec.
#
#myplot1.interval = 60


#[graphs]
#
# Graph images that can be created with the graph action
#
#
# The plots (ie. rrd files) that should be shown in the graph.
# Refers to the [plots] section above, and will fetch rrd filename
# and legend (label) from there. Each plot will be drawn as
# a LINE on the graph, (with an AREA below it which is colored in a
# lighter color to make it look a bit prettier).
#
#mygraph.plots = myplot1
#mygraph2.plots = myplot1,myplot2
#
#
# The size of the graph, default is 300x150
# 
#mygraph.width = 300
#mygraph.height = 150
#
#
# The above options are a bit limited. If you need to do more advanced stuff,
# like CDEFS and other RRD magic, you can write RRD definitions directly.
# Note that you can use special variables like $myplot, which will be substituted
# for the rrdfile path of the plot (myplot in this case)
#
#mygraph.definition = DEF:data1=$myplot1:data:AVERAGE LINE:data1#ff0000:Mylabel:
