[main]
class: Tellstick
#
# There are two implementations to choose from:
#
# 1. tdtool (via shell exec)
#
# This uses shell exec to run the tdtool binary. It works,
# but it is probably a bit slower then the next implemenation
# (though that has not actually been measured). Also, it does
# not support all the commands that the next one does (but
# it does support all the most used ones and probably has all
# you need in practice).
#
# 2. erijo (telldus python bindings from erijo at github)
#
# This uses python bindings to the telldus library, and is
# therefore a cleaner, and probably faster, implementation.
# It does however require this to be installed:
# http://github.com/erijo/telldus-py
#
# NB: I've had some problems with segfaulting when using
# this. It may be due to the fact that it runs on a 
# raspbmc install on a raspberry pi with ARM processor, or
# it may be because it's combined with the AMQP library
# and involves multiple threads, or something else.
#
# We'll use tdtool as the default implementation, because
# it's always available if telldus is installed, and because
# of my segfault problems with erijo. But if erijo works
# you're probably best of using that, performance and stability
# wise.
#
implementation: tdtool
#implementation: erijo
